package com.fragile.infosafe.tests;
// Generated by CodiumAI

import com.fragile.infosafe.primary.model.RolePermissionDto;
import org.junit.Test;

import java.util.Arrays;
import java.util.Collections;

import static org.junit.Assert.*;

public class RolePermissionDtoTest {


    // Create a new RolePermissionDto object with a roleName and a list of permissions
    @Test
    public void test_createRolePermissionDtoWithRoleNameAndPermissions() {
        RolePermissionDto rolePermissionDto = new RolePermissionDto("admin", Arrays.asList("read", "write"));
        assertEquals("admin", rolePermissionDto.getRoleName());
        assertEquals(Arrays.asList("read", "write"), rolePermissionDto.getPermissions());
    }

    // Get the roleName of a RolePermissionDto object
    @Test
    public void test_getRoleName() {
        RolePermissionDto rolePermissionDto = new RolePermissionDto("admin", Arrays.asList("read", "write"));
        assertEquals("admin", rolePermissionDto.getRoleName());
    }

    // Get the permissions of a RolePermissionDto object
    @Test
    public void test_getPermissions() {
        RolePermissionDto rolePermissionDto = new RolePermissionDto("admin", Arrays.asList("read", "write"));
        assertEquals(Arrays.asList("read", "write"), rolePermissionDto.getPermissions());
    }

    // Create a new RolePermissionDto object with a null roleName
    @Test
    public void test_createRolePermissionDtoWithNullRoleName() {
        RolePermissionDto rolePermissionDto = new RolePermissionDto(null, Arrays.asList("read", "write"));
        assertNull(rolePermissionDto.getRoleName());
        assertEquals(Arrays.asList("read", "write"), rolePermissionDto.getPermissions());
    }

    // Create a new RolePermissionDto object with an empty permissions list
    @Test
    public void test_createRolePermissionDtoWithEmptyPermissionsList() {
        RolePermissionDto rolePermissionDto = new RolePermissionDto("admin", Collections.emptyList());
        assertEquals("admin", rolePermissionDto.getRoleName());
        assertTrue(rolePermissionDto.getPermissions().isEmpty());
    }

    // Create a new RolePermissionDto object with a null permissions list
    @Test
    public void test_createRolePermissionDtoWithNullPermissionsList() {
        RolePermissionDto rolePermissionDto = new RolePermissionDto("admin", null);
        assertEquals("admin", rolePermissionDto.getRoleName());
        assertNull(rolePermissionDto.getPermissions());
    }

}