package com.fragile.infosafe.tests.exception;
// Generated by CodiumAI

import com.fragile.infosafe.primary.exceptions.UserNotFoundException;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;

public class UserNotFoundExceptionTest {


    // Creating a new instance of UserNotFoundException with a message parameter should set the message property of the exception to the provided message.
    @Test
    public void test_setMessageProperty() {
        String message = "Test message";
        UserNotFoundException exception = new UserNotFoundException(message);
        assertEquals(message, exception.getMessage());
    }

    // Retrieving the message property of a UserNotFoundException instance should return the message passed in the constructor.
    @Test
    public void test_getMessageProperty() {
        String message = "Test message";
        UserNotFoundException exception = new UserNotFoundException(message);
        assertEquals(message, exception.getMessage());
    }

    // Creating a new instance of UserNotFoundException with an empty message parameter should not throw an exception.
    @Test
    public void test_emptyMessageParameter() {
        assertDoesNotThrow(() -> {
            new UserNotFoundException("");
        });
    }

    // Creating a new instance of UserNotFoundException with a message parameter containing special characters should set the message property of the exception to the provided message.
    @Test
    public void test_specialCharactersInMessageParameter() {
        String message = "Test message with special characters: !@#$%^&*";
        UserNotFoundException exception = new UserNotFoundException(message);
        assertEquals(message, exception.getMessage());
    }

}