package com.fragile.infosafe.tests;
// Generated by CodiumAI

import com.fragile.infosafe.primary.model.Permission;
import com.fragile.infosafe.primary.model.Role;
import org.junit.Test;
import static org.junit.Assert.*;

public class RoleTest {


    // Create a Role object with a name and permissions and verify getters return correct values.
    @Test
    public void test_createRoleAndGetters() {
        Role role = Role.builder()
                .role_name("Test Role")
                .permissions(Permission.user_create.getMask() | Permission.user_edit.getMask())
                .build();

        assertEquals("Test Role", role.getRole_name());
        assertEquals(Permission.user_create.getMask() | Permission.user_edit.getMask(), role.getPermissions());
    }

    // Grant a permission to a Role object and verify hasPermission returns true.
    @Test
    public void test_grantPermissionAndHasPermission() {
        Role role = Role.builder()
                .role_name("Test Role")
                .permissions(Permission.user_create.getMask())
                .build();

        assertFalse(role.hasPermission(Permission.user_edit));

        role.grantPermission(Permission.user_edit);

        assertTrue(role.hasPermission(Permission.user_edit));
    }

    // Revoke a permission from a Role object and verify hasPermission returns false.
    @Test
    public void test_revokePermissionAndHasPermission() {
        Role role = Role.builder()
                .role_name("Test Role")
                .permissions(Permission.user_create.getMask() | Permission.user_edit.getMask())
                .build();

        assertTrue(role.hasPermission(Permission.user_edit));

        role.revokePermission(Permission.user_edit);

        assertFalse(role.hasPermission(Permission.user_edit));
    }

}