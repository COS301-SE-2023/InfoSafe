package com.fragile.infosafe.tests;// Generated by CodiumAI

import com.fragile.infosafe.primary.model.AccessRequest;
import com.fragile.infosafe.primary.model.DataScope;
import com.fragile.infosafe.primary.model.User;
import org.testng.annotations.Test;

import java.util.Date;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertThrows;

public class AccessRequestTest {


    private final Class<IllegalArgumentException> throwableClass = IllegalArgumentException.class;

    // Create an AccessRequest object with valid user_id and data_scope_id, and check if all fields are set correctly.
    @Test
    public void test_createAccessRequestWithValidIds() {
        User user = User.builder()
                .user_id(1)
                .first_name("John")
                .last_name("Doe")
                .email("johndoe@example.com")
                .password("password")
                .build();

        DataScope dataScope = DataScope.builder()
                .data_scope_id(1)
                .ds_name("Scope 1")
                .ds_description("Description 1")
                .date_captured(new Date())
                .data_custodian(user)
                .ds_status("Active")
                .build();

        AccessRequest accessRequest = AccessRequest.builder()
                .request_id(1)
                .reason("Reason 1")
                .status("Pending")
                .user_id(user)
                .data_scope_id(dataScope)
                .build();

        assertEquals(1, accessRequest.getRequest_id());
        assertEquals("Reason 1", accessRequest.getReason());
        assertEquals("Pending", accessRequest.getStatus());
        assertEquals(user, accessRequest.getUser_id());
        assertEquals(dataScope, accessRequest.getData_scope_id());
    }

    // Set a reason and status for an AccessRequest object, and check if they are set correctly.
    @Test
    public void test_setReasonAndStatus() {
        AccessRequest accessRequest = AccessRequest.builder()
                .request_id(1)
                .user_id(User.builder().user_id(1).build())
                .data_scope_id(DataScope.builder().data_scope_id(1).build())
                .build();

        accessRequest.setReason("Reason 2");
        accessRequest.setStatus("Approved");

        assertEquals("Reason 2", accessRequest.getReason());
        assertEquals("Approved", accessRequest.getStatus());
    }
}